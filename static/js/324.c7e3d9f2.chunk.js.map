{"version":3,"file":"static/js/324.c7e3d9f2.chunk.js","mappings":"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","sources":["Servis/fetch-api.js","components/Heading/Heading.jsx","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.jsx","page/Muvies/Muvies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '69cbf44b099c2de25af69dec6b9fd60c';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week', //список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n  querySearch: '/search/movie', //поиск кинофильма по ключевому слову на странице фильмов.\n  movieDetails: '/movie', //запрос полной информации о фильме для страницы кинофильма.\n  movieCredits: '/credits', //запрос информации о актёрском составе для страницы кинофильма.\n  movieReviews: '/reviews', //запрос обзоров для страницы кинофильма.\n};\n\nexport const getTrendingMuvies = async (page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  console.log(response, 'tr');\n  return response.data.results;\n};\n\nexport const getSerchQuery = async (query, page = 1) => {\n    const response = await axios.get(\n        `${END_POINTS.querySearch}/?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n      );\n  console.log(response, 'serch');\n  return response.data.results;\n};\n\nexport const getMoviesDeteils = async id => {\n  const response = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  console.log(response, 'det');\n  return response.data.results;\n};\n\nexport const getMoviesCredit = async id => {\n  const response = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n  console.log(response, 'cast');\n  return response.data.cast;\n};\n\nexport const getMoviesReviews = async (id, page = 1) => {\n  const response = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  console.log(response, 'rev');\n  return response.data.results;\n};\n\n//\n// https://api.themoviedb.org/3/movie/550?api_key=69cbf44b099c2de25af69dec6b9fd60c\n","\n\nexport default function Heading ({text}) {\n return   <h1>{text}</h1>\n}","import { Link } from 'react-router-dom';\n\nexport default function MovieList  ({ movies, prevLocation })  {\n  return (\n    <>\n      <ul>\n        {movies.map(({ id, original_title }) => (\n          <li key={id}>\n            <Link to={`/movies/${id}`} stete={{ from: prevLocation }}>\n              <h3>{original_title}</h3>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction SearchBar  ({ onSearch })  {\n  const [searchQuery, setSearchQuery] = useState('');\n\n\n\n  const handleQuerySearch = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      alert('Enter the film title');\n    }\n\n    onSearch(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} >\n        <input\n          type=\"text\"\n          name=\"searchQuery\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search ...\"\n          onChange={handleQuerySearch}\n        \n        />\n        <button\n          type=\"submit\"\n      \n        >\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n\nSearchBar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { getSerchQuery } from 'Servis/fetch-api';\nimport MovieList from 'components/MovieList/MovieList';\nimport Container from 'components/Container/Container';\nimport Heading from 'components/Heading/Heading';\n\nfunction Movies  () {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  const searchRequest = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n\n    const fetchMovie = () => {\n      setLoading(true);\n      getSerchQuery(searchRequest)\n        .then(results => {\n          if (!results.length) {\n            alert('No movies found!');\n          }\n\n          setMovies(results);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          console.log(error);\n        })\n        .finally(setLoading(false));\n    };\n    fetchMovie();\n  }, [searchRequest]);\n\n  // onSubmit\n  function onSubmit(value) {\n    setSearchParams({ query: `${value}` });\n  }\n\n  return (\n    <>\n      <Container>\n        <Heading text={'Movie Search'} />\n        {/* <h1>Movies search</h1> */}\n        {loading && 'Loading ...'}\n        {error && <div>{error}</div>}\n\n        <SearchBar onSearch={onSubmit} />\n        {movies && <MovieList movies={movies} prevLocation={location} />}\n      </Container>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axios","END_POINTS","getTrendingMuvies","page","response","console","log","data","results","getSerchQuery","query","getMoviesDeteils","id","getMoviesCredit","cast","getMoviesReviews","Heading","text","MovieList","movies","prevLocation","map","original_title","to","stete","from","onSearch","useState","searchQuery","setSearchQuery","onSubmit","e","preventDefault","trim","alert","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","setMovies","error","setError","loading","setLoading","location","useLocation","searchRequest","get","useEffect","then","length","catch","finally","Container"],"sourceRoot":""}