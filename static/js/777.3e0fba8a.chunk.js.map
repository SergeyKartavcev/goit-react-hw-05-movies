{"version":3,"file":"static/js/777.3e0fba8a.chunk.js","mappings":"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","sources":["Servis/fetch-api.js","webpack://react-homework-template/./src/components/Heading/Heading.module.css?4d39","components/Heading/Heading.jsx","webpack://react-homework-template/./src/components/MovieList/MovieList.module.css?6db5","components/MovieList/MovieList.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","page/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '69cbf44b099c2de25af69dec6b9fd60c';\naxios.defaults.baseURL = 'http://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week', //список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n  querySearch: '/search/movie', //поиск кинофильма по ключевому слову на странице фильмов.\n  movieDetails: '/movie', //запрос полной информации о фильме для страницы кинофильма.\n  movieCredits: '/credits', //запрос информации о актёрском составе для страницы кинофильма.\n  movieReviews: '/reviews', //запрос обзоров для страницы кинофильма.\n};\n\nexport const getTrendingMuvies = async (page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  return response.data.results;\n};\n\nexport const getSerchQuery = async (query, page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.querySearch}/?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return response.data.results;\n};\n\nexport const getMoviesDeteils = async id => {\n  const response = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const getMoviesCredit = async id => {\n  const response = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast;\n};\n\nexport const getMoviesReviews = async (id, page = 1) => {\n  const response = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return response.data.results;\n};\n\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"heading\":\"Heading_heading__f8N4J\"};","import s from './Heading.module.css'\n\nexport default function Heading ({text}) {\n return   <h1 className={s.heading}>{text}</h1>\n}","// extracted by mini-css-extract-plugin\nexport default {\"movie_list\":\"MovieList_movie_list__IWl2j\",\"movie_item\":\"MovieList_movie_item__Q205J\",\"poster\":\"MovieList_poster__UbPpc\"};","import { Link } from 'react-router-dom';\nimport s from './MovieList.module.css'\nexport default function MovieList  ({ movies, prevLocation })  {\n  return (\n    <>\n      <ul className={s.movie_list} >\n            {movies.map(movie => (\n              <li className={s.movie_item} key={movie.id} >\n                <Link\n                  to={{\n                    pathname: `movies/${movie.id}`,\n                    state: { from: prevLocation },\n                  }}\n            \n                >\n                  <img\n                    src={\n                      movie.poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                        : 'noPhoto'\n                    }\n                    alt={movie.title}\n                   className={s.poster}\n                  />\n                </Link>\n                <span >{movie.title}</span>\n              </li>\n            ))}\n          </ul>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"search_form\":\"SearchBar_search_form__JD4pT\",\"search_input\":\"SearchBar_search_input__fzacM\",\"search_button\":\"SearchBar_search_button__nzXi6\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './SearchBar.module.css'\nfunction SearchBar  ({ onSearch })  {\n  const [searchQuery, setSearchQuery] = useState('');\n\n\n\n  const handleQuerySearch = e => {\n    setSearchQuery(e.target.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      alert('Enter the film title');\n    }\n\n    onSearch(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <form className={s.search_form} onSubmit={handleSubmit} >\n        <input\n        className={s.search_input}\n          type=\"text\"\n          name=\"searchQuery\"\n          value={searchQuery}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search ...\"\n          onChange={handleQuerySearch}\n        \n        />\n        <button\n        className={s.search_button}\n          type=\"submit\"\n      \n        >\n          Search\n        </button>\n      </form>\n    </>\n  );\n};\n\nSearchBar.propTypes = {\n  onSearch: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import { useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport SearchBar from 'components/SearchBar/SearchBar';\nimport { getSerchQuery } from 'Servis/fetch-api';\nimport MovieList from 'components/MovieList/MovieList';\nimport Container from 'components/Container/Container';\nimport Heading from 'components/Heading/Heading';\n\nfunction Movies  () {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const location = useLocation();\n  const searchRequest = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchRequest) {\n      return;\n    }\n\n    const fetchMovie = () => {\n      setLoading(true);\n      getSerchQuery(searchRequest)\n        .then(results => {\n          if (!results.length) {\n            alert('No movies found!');\n          }\n\n          setMovies(results);\n        })\n        .catch(error => {\n          setError('Ooops. Something went wrong...');\n          console.log(error);\n        })\n        .finally(setLoading(false));\n    };\n    fetchMovie();\n  }, [searchRequest]);\n\n  // onSubmit\n  function onSubmit(value) {\n    setSearchParams({ query: `${value}` });\n  }\n\n  return (\n    <>\n      <Container>\n        <Heading text={'Movie Search'} />\n        {/* <h1>Movies search</h1> */}\n        {loading && 'Loading ...'}\n        {error && <div>{error}</div>}\n\n        <SearchBar onSearch={onSubmit} />\n       \n        {movies && <MovieList movies={movies} prevLocation={location} />}\n      </Container>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["API_KEY","axios","END_POINTS","getTrendingMuvies","page","response","data","results","getSerchQuery","query","getMoviesDeteils","id","getMoviesCredit","cast","getMoviesReviews","Heading","text","className","s","MovieList","movies","prevLocation","map","movie","to","pathname","state","from","src","poster_path","alt","title","onSearch","useState","searchQuery","setSearchQuery","onSubmit","e","preventDefault","trim","alert","type","name","value","autoComplete","autoFocus","placeholder","onChange","target","toLowerCase","useSearchParams","searchParams","setSearchParams","setMovies","error","setError","loading","setLoading","location","useLocation","searchRequest","get","useEffect","then","length","catch","console","log","finally","Container"],"sourceRoot":""}