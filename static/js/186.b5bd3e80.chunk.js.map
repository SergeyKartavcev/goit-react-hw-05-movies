{"version":3,"file":"static/js/186.b5bd3e80.chunk.js","mappings":"8SAEMA,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAiB,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACRH,EAAAA,GAAAA,IAAA,UAClBC,EADkB,oBACaF,EADb,iBAC6BI,EAD7B,wCADQ,cACzBC,EADyB,OAI/BC,QAAQC,IAAIF,EAAU,MAJS,kBAKxBA,EAASG,KAAKC,SALU,2CAAH,qDAQjBC,EAAa,mCAAG,WAAOC,GAAP,4FAAcP,EAAd,+BAAqB,EAArB,SACFH,EAAAA,GAAAA,IAAA,UAChBC,EADgB,qBACmBF,EADnB,iBACmCI,EADnC,kBACiDO,EADjD,wCADE,cACnBN,EADmB,OAI3BC,QAAQC,IAAIF,EAAU,SAJK,kBAKpBA,EAASG,KAAKC,SALM,2CAAH,sDAQbG,EAAgB,mCAAG,WAAMC,GAAN,uFACPZ,EAAAA,GAAAA,IAAA,UAClBC,EADkB,YACSW,EADT,oBACuBb,EADvB,oBADO,cACxBK,EADwB,OAI9BC,QAAQC,IAAIF,EAAU,OAJQ,kBAKvBA,EAASG,KAAKC,SALS,2CAAH,sDAQhBK,EAAe,mCAAG,WAAMD,GAAN,uFACNZ,EAAAA,GAAAA,IAAA,iBACXY,GADW,OACNX,EADM,oBAC6BF,EAD7B,oBADM,cACvBK,EADuB,OAI7BC,QAAQC,IAAIF,EAAU,QAJO,kBAKtBA,EAASG,KAAKO,MALQ,2CAAH,sDAQfC,EAAgB,mCAAG,WAAOH,GAAP,4FAAWT,EAAX,+BAAkB,EAAlB,SACPH,EAAAA,GAAAA,IAAA,iBACXY,GADW,OACNX,EADM,oBAC6BF,EAD7B,gCAC4DI,IAFrD,cACxBC,EADwB,OAI9BC,QAAQC,IAAIF,EAAU,OAJQ,kBAKvBA,EAASG,KAAKC,SALS,2CAAH,qD,yGCH7B,UAtCA,WACE,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAECT,EAAAA,EAAAA,IAAiBC,GAFlB,OAEXS,EAFW,OAGjBpB,QAAQC,IAAImB,GACZL,EAAWK,GAJM,gDAMjBH,EAAS,EAAD,IANS,yDAAH,qDASlBE,GACD,GAAE,CAACR,KAGF,gCACGK,IAAS,yBAAMA,KAChB,wBACGF,EAAQO,KAAI,SAAAC,GAEX,OACE,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOf,GAKnB,QAKR,C","sources":["Servis/fetch-api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '69cbf44b099c2de25af69dec6b9fd60c';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week', //список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n  querySearch: '/search/movie', //поиск кинофильма по ключевому слову на странице фильмов.\n  movieDetails: '/movie', //запрос полной информации о фильме для страницы кинофильма.\n  movieCredits: '/credits', //запрос информации о актёрском составе для страницы кинофильма.\n  movieReviews: '/reviews', //запрос обзоров для страницы кинофильма.\n};\n\nexport const getTrendingMuvies = async (page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n  console.log(response, 'tr');\n  return response.data.results;\n};\n\nexport const getSerchQuery = async (query, page = 1) => {\n    const response = await axios.get(\n        `${END_POINTS.querySearch}/?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n      );\n  console.log(response, 'serch');\n  return response.data.results;\n};\n\nexport const getMoviesDeteils = async id => {\n  const response = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  console.log(response, 'det');\n  return response.data.results;\n};\n\nexport const getMoviesCredit = async id => {\n  const response = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n  console.log(response, 'cast');\n  return response.data.cast;\n};\n\nexport const getMoviesReviews = async (id, page = 1) => {\n  const response = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n  console.log(response, 'rev');\n  return response.data.results;\n};\n\n//\n// https://api.themoviedb.org/3/movie/550?api_key=69cbf44b099c2de25af69dec6b9fd60c\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesReviews } from 'Servis/fetch-api';\n\nfunction Reviews  ()  {\n  const { movieId } = useParams();\n\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const res = await getMoviesReviews(movieId);\n        console.log(res);\n        setReviews(res);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <div>{error}</div>}\n      <ul>\n        {reviews.map(review => {\n          // console.log(review);\n          return (\n            <li key={review.id}>\n              <p>Author: {review.author}</p>\n              <p>{review.content}</p>\n            </li>\n          );\n        })}\n      </ul>\n      {/* {reviews} */}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["API_KEY","axios","END_POINTS","getTrendingMuvies","page","response","console","log","data","results","getSerchQuery","query","getMoviesDeteils","id","getMoviesCredit","cast","getMoviesReviews","movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","fetchReviews","res","map","review","author","content"],"sourceRoot":""}