{"version":3,"file":"static/js/247.b2c8c688.chunk.js","mappings":"8SAEMA,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,8BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGHC,EAAiB,mCAAG,yGAAOC,EAAP,+BAAc,EAAd,SACRH,EAAAA,GAAAA,IAAA,UAClBC,EADkB,oBACaF,EADb,iBAC6BI,EAD7B,wCADQ,cACzBC,EADyB,yBAKxBA,EAASC,KAAKC,SALU,2CAAH,qDAQjBC,EAAa,mCAAG,WAAOC,GAAP,4FAAcL,EAAd,+BAAqB,EAArB,SACJH,EAAAA,GAAAA,IAAA,UAClBC,EADkB,qBACiBF,EADjB,iBACiCI,EADjC,kBAC+CK,EAD/C,wCADI,cACrBJ,EADqB,yBAKpBA,EAASC,KAAKC,SALM,2CAAH,sDAQbG,EAAgB,mCAAG,WAAMC,GAAN,uFACPV,EAAAA,GAAAA,IAAA,UAClBC,EADkB,YACSS,EADT,oBACuBX,EADvB,oBADO,cACxBK,EADwB,yBAKvBA,EAASC,MALc,2CAAH,sDAQhBM,EAAe,mCAAG,WAAMD,GAAN,uFACNV,EAAAA,GAAAA,IAAA,iBACXU,GADW,OACNT,EADM,oBAC6BF,EAD7B,oBADM,cACvBK,EADuB,yBAKtBA,EAASC,KAAKO,MALQ,2CAAH,sDAQfC,EAAgB,mCAAG,WAAOH,GAAP,4FAAWP,EAAX,+BAAkB,EAAlB,SACPH,EAAAA,GAAAA,IAAA,iBACXU,GADW,OACNT,EADM,oBAC6BF,EAD7B,gCAC4DI,IAFrD,cACxBC,EADwB,yBAKvBA,EAASC,KAAKC,SALS,2CAAH,qD,yGCQ7B,UAhDA,WACI,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOJ,EAAP,KAAaK,EAAb,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAiBJ,OAfIC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,oGAEdF,GAAW,GAFG,UAGIV,EAAAA,EAAAA,IAAgBG,GAHpB,OAGRU,EAHQ,OAIdP,EAAQO,GAJM,gDAMdL,EAAS,kCANK,yBAQdE,GAAW,GARG,4EAAH,qDAWfE,GACD,GAAE,CAACT,KAGR,gCACCM,GAAW,aACXF,IAAS,yBAAMA,KAChB,wBACKN,EAAKa,KAAI,SAAAC,GACV,OACI,2BACE,gBAEEC,IAAG,yCAAoCD,EAASE,cAChDC,IAAG,UAAKH,EAASI,KAAd,gBAEL,4BACE,kCAAUJ,EAASI,SACnB,uCAAeJ,EAASK,kBARnBL,EAAShB,GAYrB,QAKJ,C","sources":["Servis/fetch-api.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '69cbf44b099c2de25af69dec6b9fd60c';\naxios.defaults.baseURL = 'http://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week', //список самых популярных фильмов на сегодня для создания коллекции на главной странице.\n  querySearch: '/search/movie', //поиск кинофильма по ключевому слову на странице фильмов.\n  movieDetails: '/movie', //запрос полной информации о фильме для страницы кинофильма.\n  movieCredits: '/credits', //запрос информации о актёрском составе для страницы кинофильма.\n  movieReviews: '/reviews', //запрос обзоров для страницы кинофильма.\n};\n\nexport const getTrendingMuvies = async (page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  return response.data.results;\n};\n\nexport const getSerchQuery = async (query, page = 1) => {\n  const response = await axios.get(\n    `${END_POINTS.querySearch}/?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return response.data.results;\n};\n\nexport const getMoviesDeteils = async id => {\n  const response = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const getMoviesCredit = async id => {\n  const response = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast;\n};\n\nexport const getMoviesReviews = async (id, page = 1) => {\n  const response = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return response.data.results;\n};\n\n\n\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesCredit } from 'Servis/fetch-api';\n\n\nfunction Cast  () {\n    const { movieId } = useParams();\n  \n    const [cast, setCast] = useState([]);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n  \n    useEffect(() => {\n      const fetchCast = async () => {\n        try {\n          setLoading(true);\n          const res = await getMoviesCredit(movieId);\n          setCast(res);\n        } catch (error) {\n          setError('Ooops. Something went wrong...');\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchCast();\n    }, [movieId]);\n\nreturn(\n<>\n{loading && 'Loading...'}\n{error && <div>{error}</div>}\n<ul>\n    {cast.map(castItem =>{\n    return (\n        <li key={castItem.id} >\n          <img\n          \n            src={`https://image.tmdb.org/t/p/w300${castItem.profile_path}`}\n            alt={`${castItem.name} portrait`}\n          />\n          <div>\n            <p>Name: {castItem.name}</p>\n            <p>Character: {castItem.character}</p>\n          </div>\n        </li>\n      );\n    })}\n</ul>\n</>\n)\n\n}\n\nexport default Cast;"],"names":["API_KEY","axios","END_POINTS","getTrendingMuvies","page","response","data","results","getSerchQuery","query","getMoviesDeteils","id","getMoviesCredit","cast","getMoviesReviews","movieId","useParams","useState","setCast","error","setError","loading","setLoading","useEffect","fetchCast","res","map","castItem","src","profile_path","alt","name","character"],"sourceRoot":""}